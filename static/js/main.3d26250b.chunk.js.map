{"version":3,"sources":["App.js","index.js"],"names":["emojiDictionary","emojisWEKnow","Object","keys","App","useState","meaning","setMeaning","className","onChange","event","userInput","target","value","undefined","map","emo","onClick","emojiClickHandler","style","fontSize","padding","cursor","href","rootElement","document","getElementById","ReactDOM","render"],"mappings":"oMAIMA,EAAkB,CACtB,eAAM,aACN,eAAM,YACN,eAAM,QACN,eAAM,SACN,eAAM,YACN,eAAM,QACN,eAAM,YACN,eAAM,cACN,eAAM,OACN,eAAM,QACN,eAAM,WACN,eAAM,aACN,eAAM,eACN,eAAM,YACN,eAAM,aACN,eAAM,aACN,eAAM,cACN,eAAM,YACN,eAAM,YACN,eAAM,eACN,qBAAO,eACP,eAAM,cACN,eAAM,gBACN,eAAM,cACN,eAAM,YACN,eAAM,WACN,eAAM,cACN,eAAM,aACN,eAAM,cACN,eAAM,WACN,eAAM,eACN,eAAM,mBACN,eAAM,aACN,eAAM,WACN,eAAM,cACN,eAAM,YACN,eAAM,iBACN,eAAM,gBACN,eAAM,gBACN,eAAM,eACN,eAAM,WACN,eAAM,eACN,eAAM,iBACN,eAAM,WACN,eAAM,YACN,eAAM,cACN,eAAM,UACN,eAAM,aACN,eAAM,sBACN,eAAM,aACN,eAAM,SACN,eAAM,aACN,eAAM,sBACN,eAAM,eACN,eAAM,mBACN,eAAM,gBACN,eAAM,aACN,eAAM,YACN,eAAM,UACN,eAAM,gBACN,eAAM,cACN,eAAM,iBACN,eAAM,cACN,eAAM,gBACN,eAAM,eACN,eAAM,kBACN,eAAM,eACN,eAAM,wBACN,eAAM,UACN,eAAM,WACN,eAAM,iBACN,eAAM,uBACN,eAAM,cACN,eAAM,WACN,eAAM,cACN,eAAM,mBACN,eAAM,gBACN,eAAM,YACN,eAAM,kBACN,eAAM,eACN,eAAM,cACN,eAAM,cACN,eAAM,YACN,eAAM,kBACN,eAAM,eACN,eAAM,aACN,eAAM,SACN,eAAM,kBACN,eAAM,WACN,eAAM,cACN,eAAM,aACN,eAAM,cACN,eAAM,gBACN,eAAM,iBACN,SAAK,iBACL,eAAM,yBACN,eAAM,UACN,eAAM,2BACN,eAAM,eACN,eAAM,mBACN,eAAM,mBACN,eAAM,aACN,eAAM,sBACN,eAAM,qBACN,eAAM,kBACN,eAAM,kBACN,eAAM,iBACN,eAAM,UACN,eAAM,SACN,eAAM,gBACN,qBAAO,sBACP,eAAM,kBACN,eAAM,YAIJC,EAAeC,OAAOC,KAAKH,GAMhB,SAASI,IAEtB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KA0BA,OACE,sBAAKC,UAAU,MAAf,UACE,0DAEA,uBAAOC,SA3BX,SAA2BC,GAIzB,IAAIC,EAAYD,EAAME,OAAOC,MAEzBP,EAAUN,EAAgBW,QAEdG,IAAZR,IACFA,EAAU,wCAGZC,EAAWD,MAiBT,sBAAKE,UAAU,SAAf,cAA0BF,EAA1B,OAGA,kDAECL,EAAac,KAAI,SAAUC,GAC1B,OACE,sBACEC,QAAS,kBAtBnB,SAA2BD,GAKzBT,EAFcP,EAAgBgB,IAmBPE,CAAkBF,IAEjCG,MAAO,CAAEC,SAAU,OAAQC,QAAS,SAAUC,OAAQ,WAHxD,SAKGN,GAHIA,MAQX,qBAAKR,UAAU,OAAf,SACE,mBAAGe,KAAK,iGAAR,+CC9KR,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACxB,EAAD,MAEFoB,I","file":"static/js/main.3d26250b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\n// Defined Dictionary(this can come from an API ,Data-base etc...)\nconst emojiDictionary = {\n  \"🍉\": \"Watermelon\",\n  \"🍊\": \"Tangerine\",\n  \"🍋\": \"Lemon\",\n  \"🍌\": \"Banana\",\n  \"🍍\": \"Pineapple\",\n  \"🥭\": \"Mango\",\n  \"🍎\": \"Red Apple\",\n  \"🍏\": \"Green Apple\",\n  \"🍐\": \"Pear\",\n  \"🍑\": \"Peach\",\n  \"🍒\": \"Cherries\",\n  \"🍓\": \"Strawberry\",\n  \"🥝\": \"Kiwi Fruit  \",\n  \"🍅\": \"Tomato   \",\n  \"🥥\": \"Coconut   \",\n  \"🥑\": \"Avocado   \",\n  \"🍆\": \"Eggplant   \",\n  \"🥔\": \"Potato   \",\n  \"🥕\": \"Carrot   \",\n  \"🌽\": \"Ear of Corn \",\n  \"🌶️\": \"Hot Pepper  \",\n  \"🥒\": \"Cucumber   \",\n  \"🥬\": \"Leafy Green  \",\n  \"🥦\": \"Broccoli   \",\n  \"🧄\": \"Garlic   \",\n  \"🧅\": \"Onion   \",\n  \"🍄\": \"Mushroom   \",\n  \"🥜\": \"Peanuts   \",\n  \"🌰\": \"Chestnut   \",\n  \"🍞\": \"Bread   \",\n  \"🥐\": \"Croissant   \",\n  \"🥖\": \"Baguette Bread  \",\n  \"🥨\": \"Pretzel   \",\n  \"🥯\": \"Bagel   \",\n  \"🥞\": \"Pancakes   \",\n  \"🧇\": \"Waffle   \",\n  \"🧀\": \"Cheese Wedge  \",\n  \"🍖\": \"Meat on Bone \",\n  \"🍗\": \"Poultry Leg  \",\n  \"🥩\": \"Cut of Meat \",\n  \"🥓\": \"Bacon   \",\n  \"🍔\": \"Hamburger   \",\n  \"🍟\": \"French Fries  \",\n  \"🍕\": \"Pizza   \",\n  \"🌭\": \"Hot Dog  \",\n  \"🥪\": \"Sandwich   \",\n  \"🌮\": \"Taco   \",\n  \"🌯\": \"Burrito   \",\n  \"🥙\": \"Stuffed Flatbread  \",\n  \"🧆\": \"Falafel   \",\n  \"🥚\": \"Egg   \",\n  \"🍳\": \"Cooking   \",\n  \"🥘\": \"Shallow Pan of Food\",\n  \"🍲\": \"Pot of Food \",\n  \"🥣\": \"Bowl with Spoon \",\n  \"🥗\": \"Green Salad  \",\n  \"🍿\": \"Popcorn   \",\n  \"🧈\": \"Butter   \",\n  \"🧂\": \"Salt   \",\n  \"🥫\": \"Canned Food  \",\n  \"🍱\": \"Bento Box  \",\n  \"🍘\": \"Rice Cracker  \",\n  \"🍙\": \"Rice Ball  \",\n  \"🍚\": \"Cooked Rice  \",\n  \"🍛\": \"Curry Rice  \",\n  \"🍜\": \"Steaming Bowl  \",\n  \"🍝\": \"Spaghetti   \",\n  \"🍠\": \"Roasted Sweet Potato \",\n  \"🍢\": \"Oden   \",\n  \"🍣\": \"Sushi   \",\n  \"🍤\": \"Fried Shrimp  \",\n  \"🍥\": \"Fish Cake with Swirl\",\n  \"🥮\": \"Moon Cake  \",\n  \"🍡\": \"Dango   \",\n  \"🥟\": \"Dumpling   \",\n  \"🥠\": \"Fortune Cookie  \",\n  \"🥡\": \"Takeout Box  \",\n  \"🦪\": \"Oyster   \",\n  \"🍦\": \"Soft Ice Cream \",\n  \"🍧\": \"Shaved Ice  \",\n  \"🍨\": \"Ice Cream  \",\n  \"🍩\": \"Doughnut   \",\n  \"🍪\": \"Cookie   \",\n  \"🎂\": \"Birthday Cake  \",\n  \"🍰\": \"Shortcake   \",\n  \"🧁\": \"Cupcake   \",\n  \"🥧\": \"Pie   \",\n  \"🍫\": \"Chocolate Bar  \",\n  \"🍬\": \"Candy   \",\n  \"🍭\": \"Lollipop   \",\n  \"🍮\": \"Custard   \",\n  \"🍯\": \"Honey Pot  \",\n  \"🍼\": \"Baby Bottle  \",\n  \"🥛\": \"Glass of Milk \",\n  \"☕\": \"Hot Beverage  \",\n  \"🍵\": \"Teacup Without Handle \",\n  \"🍶\": \"Sake   \",\n  \"🍾\": \"Bottle with Popping Cork\",\n  \"🍷\": \"Wine Glass  \",\n  \"🍸\": \"Cocktail Glass  \",\n  \"🍹\": \"Tropical Drink  \",\n  \"🍺\": \"Beer Mug  \",\n  \"🍻\": \"Clinking Beer Mugs \",\n  \"🥂\": \"Clinking Glasses  \",\n  \"🥃\": \"Tumbler Glass  \",\n  \"🥤\": \"Cup with Straw \",\n  \"🧃\": \"Beverage Box  \",\n  \"🧉\": \"Mate   \",\n  \"🧊\": \"Ice   \",\n  \"🥢\": \"Chopsticks   \",\n  \"🍽️\": \"Fork and Knife with\",\n  \"🍴\": \"Fork and Knife \",\n  \"🥄\": \"Spoon   \"\n};\n\n//taking on Array out of Dictionary(Ojects)\nvar emojisWEKnow = Object.keys(emojiDictionary);\n\n// console.log(emojisWEKnow);\n\n//*********/ Main app /*********//\n\nexport default function App() {\n  //two states meaning=Do we know the meaning?  & setMeaning= which sets the meaning\n  const [meaning, setMeaning] = useState(\"\");\n\n  // activates when we give an input\n  function emojiinputHandler(event) {\n    //processing\n    // console.log(event.target.value);\n\n    var userInput = event.target.value;\n\n    var meaning = emojiDictionary[userInput];\n\n    if (meaning === undefined) {\n      meaning = \"We do not have this in our data base\";\n    }\n\n    setMeaning(meaning); //React call to show output\n  }\n  // activates when we click on dispayed keys of an object using array\n  function emojiClickHandler(emo) {\n    //processing\n    // console.log(emo);\n    var meaning = emojiDictionary[emo];\n\n    setMeaning(meaning); //React call to show output\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Bon Appetit 🍛</h1>\n\n      <input onChange={emojiinputHandler}></input>\n\n      <div className=\"output\"> {meaning} </div>\n      {/* {actual output set by React using use state} */}\n\n      <h3> Emojis We Know </h3>\n\n      {emojisWEKnow.map(function (emo) {\n        return (\n          <span\n            onClick={() => emojiClickHandler(emo)}\n            key={emo}\n            style={{ fontSize: \"2rem\", padding: \"0.2rem\", cursor: \"pointer\" }}\n          >\n            {emo}\n          </span>\n        );\n      })}\n\n      <div className=\"pink\">\n        <a href=\"https://docs.google.com/spreadsheets/d/1qrhOG0vppK_4GFbPanZS-BXv7JPoFGCpAWUqvffgXcg/edit#gid=0\">\n          ***create dictionary objects\n        </a>\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}